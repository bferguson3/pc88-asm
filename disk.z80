;; disk.z80

; 111x ATTENTION
; 100x DATAVALID
; 101x REQUESTDATA
; 110x DATAACCEPT

; 0xFF Status out
; 0xFE Status in 
; 0xFD Data out
; 0xFC Data in 

DISK_SdCmd:
    push    af 
    ld      a,#0b00001111   ; attention=1
    out     (0xFF),a 
    ._wait1: 
    in      a,(0xFE) 
    bit     1,a             ; RFD=1?
    jr      z,._wait1 
    ld      a,#0b00001110   ; attn = 0
    out     (0xFF),a 
    jr      DISK_SdData1sub

DISK_SdData1: 
    push    af 
    .__wait1: 
    in      a,(0xFE) 
    bit     1,a             ; RFD=1?
    jr      z,.__wait1 
DISK_SdData1sub:
    pop     af 
    out     (0xFD),a        ; write byte 
    ld      a,#0b00001001   ; data valid 1
    out     (0xFF),a 
    .wait2: 
    in      a,(0xFE)
    bit     2,a             ; wait for DAC=1
    jr      z,.wait2 
    ld      a,#0b00001000   ; data valid 0
    out     (0xFF),a 
    .wait3: 
    in      a,(0xFE) 
    bit     2,a             ; wait for DAC=0
    jr      nz,.wait3 
    ret 

DISK_RdData2: 
    ld      a,#0b00001011   ; ready for data 1
    out     (0xFF),a 
    .___wait1: 
    in      a,(0xFE) 
    rrca                    ; data valid if bit 0 set
    jr      nc,.___wait1    ; wait for DAV ack = 1
    ld      a,#0b00001010   ; rdy for data 0
    out     (0xFF),a        
    in      a,(0xFC)        ; read byte 
    ld      (hl),a 
    inc     hl 
    ld      a,#0b00001101   ; data accepted = 1
    out     (0xFF),a 
    .__wait2: 
    in      a,(0xFE) 
    rrca                    
    jr      c,.__wait2      ; wait for DAV=0
    in      a,(0xFC) 
    ld      (hl),a 
    inc     hl 
    ld      a,#0b00001100   ; data accepted = 0
    out     (0xFF),a 
    ret 


DISK_Load: 
; Use DiskLoad macro 
; HL - Dest 
; DE - Track, Sector
; BC - NumSecs, Drive No
    ld      a,#0x02         ; cmd 02 - read data 
    call    DISK_SdCmd
    ld      a,b             ; sector num.
    cp      #17 
    jr      c,._load2 
    ld      a,#17
    sub     e 
    ._load2: 
    call    DISK_SdData1 
    ld      a,c             ; drive 
    call    DISK_SdData1 
    ld      a,d             ; track 
    call    DISK_SdData1 
    ld      a,e             ; sector 
    call    DISK_SdData1 
    ld      a,#0x12         ; Cmd fast send data
    call    DISK_SdCmd
    ._loop1: 
    push    bc 
    ld      b,#128          ; 128 loops, 2 bytes each = 256 bytes per sector loop
    ._loop2: 
    call    DISK_RdData2    ; (do this 128 times)
    djnz    ._loop2 
    inc     e 
    ld      a,e 
    cp      #17 
    jr      z,._next        ; if sector ct = 17, go to next track 
    pop     bc              ; pop sector count
    djnz    ._loop1         
    ret 
    ._next: 
    inc     d 
    ld      e,#1 
    pop     bc 
    dec     b               ; b = sector count
    jr      nz,DISK_Load    ; load the next sector
    ret 
