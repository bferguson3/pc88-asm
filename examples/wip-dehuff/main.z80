; WIP - probably doesnt work right

  org 0x0 
  jp INIT 
  
  org 0x100

 ; include "../../pc88.z80"

INIT:
    ld sp,0xff
    di
    jp MAIN


datSz:     DB 0 
bitCtr:    DB 1
decodeCtr: DB 0x80
dataPtr: DW 0
treePtr: DW 0
;TEXT_BASE equ 0x250
  
MAIN:
    ld hl,data 
    ld (dataPtr),hl 
    ld a,%1 
    ld (bitCtr),a 
    ld hl,table 
    ld (treePtr),hl 
    ld a,(hl)
    and %11111100
    srl a 
    srl a 
    ld (datSz),a  ; record size of bits 
    
    ld de,STRUCT 
    ld hl,
_tablerec:
    ld a,(INCR)
    inc a 
    ld (de),a 
    inc de 
    inc a 
    ld (de),a     ; assign 1 and 2 to L and R 
    inc de        ; increment struct ptr 
    ld (INCR),a

    ld hl,table
    GetBit bitCtr ; get bit, leaves DE alone
    xor a 
    or b 
    call z,_tablerec ; IF 0, recurse 
    push de          ; ELSE 1, get char and return
    GetCharBits bitCtr ; value is in D
    ld a,d
    pop de 
    ld (de),a 
    inc de 
    inc de      ; next struct, skip one byte 

    ret 

lp:
    jp lp 

INCR: db 0 

GetBit: .macro brc 
  ld a,(&brc)
  ld c,a 
  call GETNEXTBIT
  ld a,c 
  ld (&brc),a
 .endm
 
 GetCharBits: .macro brc 
  ld a,(&brc)
  ld c,a 
  call GETCHARBITS
  ld a,c 
  ld (&brc),a
 .endm
; GET BIT 
; IF 0, CALL POPNODE 
; IF 1, CALL POPLEAF 
;   AND RET 
; ASSIGN STRUCT + 0 
    
   

node: macro 
  .db 0 ; left OR character 
  .db 0 ; right 
.endm

STRUCT:
.rept 128
 node 
.endm

GETCHARBITS:
; returns 7 bits in D - always from TREE. 
; C contains counter, HL contains data target
; X : A BC HL DE O : ' 
    ld d,0
    ld a,(datSz)
    ld e,a
_GDBLP:
    call GETNEXTBIT
    ; roll B > CF
    srl b 
    ; roll CF > D
    rl d 
    dec e 
    xor a 
    or e 
    jr nz,_GDBLP
    ret    
    

GETNEXTBIT:
; HL contains current data pointer 
; C contains shifted bit # of current byte 
; returns in B and C
; X: A, B, C, HL      O: DE 
    ld a,(hl)
    and c 
    jr nz,_one 
    ld b,0 
    jr _fin
_one:
    ld b,1
_fin:
    ld a,c
    srl a            ; shifts bit0 into the carry
    jr nc,_noupd
    ld a,128        ; if its the last bit, set bit7
    inc hl           ; and increase the data ptr 
_noupd:
    ld c,a          ; save the bit ctr 
    ret     ; and return

  ORG 0x200
  
table:.DB 0x1d, 0x88, 0xc1, 0x3e, 0xb0, 0xb0, 0xc0
data: .DB 0xff, 0xf0 ; AA, 0xB7, 0x77, 0xFF, 0xc0, 0x18


;; 000111.0.11000100.0.11000001.0.0.1000000.0.11000010.11000011.....

;; 101010101011011101110111
;; A A A A A 
