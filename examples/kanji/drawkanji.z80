
; drawkanji.z80 

; convert JIS to ROMH
kanji_std_addr_L: .macro ADDR
    ld a,#( ((&ADDR & $1f) << 4) | ((&ADDR & 0b01100000) << 9) | ((&ADDR & $1f00) << 1 )) & 0xff
.endm
kanji_std_addr_H: .macro ADDR
    ld a,#( ((&ADDR & $1f) << 4) | ((&ADDR & 0b01100000) << 9) | ((&ADDR & $1f00) << 1 ))>>8
.endm
;        

DrawKanji: .macro VRAMTgt, KanjiLoc
    out ($eb),a 
    ld hl,&VRAMTgt 
    ld de,&KanjiLoc
    ld a,$4f
    cp d 
    call nc, _pullkanji2
    call c, _pullkanji    
.endm

;; 
; SECOND STD KANJI
;; PRE-FR MODELS OK
_pullkanji2:
    ld a,e
    out ($ec),a     ; low to ec
    ld a,d
    out ($ed),a     ; high to ed
    out ($ea),a     ; write anything - access start
    nop 
    nop             ; 8 cycles 
    in a,($ed)      ; left byte 1
    ld (hl),a 
    inc hl 
    in a,($ec)
    ld (hl),a 
    out ($eb),a     ; write anything - access done
    ld bc,15
    _kanjiloop2:
    push bc
    call _knextrow2
    pop bc 
    dec bc 
    ld a,b 
    or c 
    jr nz,_kanjiloop2
    ret
_knextrow2:
    ld bc,#79
    add hl,bc       ; next row
    inc de 
    ld a,e
    out ($ec),a 
    ld a,d 
    out ($ed),a 
    out ($ea),a 
    nop 
    nop 
    in a,($ed)
    ld (hl),a 
    inc hl 
    in a,($ec)
    ld (hl),a 
    out ($eb),a 
    ret

;
;; FIRST STD KANJI
; PRE-FR MODELS OK
_pullkanji:
    ; rom1:
    ld a,e
    out ($e8),a     ; low to e8
    ld a,d
    out ($e9),a     ; high to e9
    out ($ea),a     ; write anything - access start
    nop 
    nop             ; 8 cycles 
    in a,($e9)      ; left byte 1
    ld (hl),a 
    inc hl 
    in a,($e8)
    ld (hl),a 
    out ($eb),a     ; write anything - access done
    ld bc,15
    _kanjiloop:
    push bc
    call _knextrow
    pop bc 
    dec bc 
    ld a,b 
    or c 
    jr nz,_kanjiloop
    ret
_knextrow:
    ld bc,#79
    add hl,bc       ; next row
    inc de 
    ld a,e
    out ($e8),a 
    ld a,d 
    out ($e9),a 
    out ($ea),a 
    nop 
    nop 
    in a,($e9)
    ld (hl),a 
    inc hl 
    in a,($e8)
    ld (hl),a 
    out ($eb),a 
    ret

