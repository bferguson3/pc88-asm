; window.z80 


DrawMapWindow:
	;; Draw Tile From Map --- Buffer 
	ld a,#20		; window height
	ld ($02),a 
	ld hl,map_buffer
	ld ix,map_backbuffer
	ld bc,40*256	; X tile counter - window width
	ld de,0xc000 	; set tile destination - top left window corner
	.rowloop:
	push bc 
	ld a,(hl)	; multiply A by 16 
	cp (ix+0)	; but first, compare with backbuffer
	jr nz,.drawtile
	; SKIP
	jr .skip
	.drawtile:
	ld (ix+0),a ; and if it is different copy to bb
	ld c,a 		; a to bc
	ld b,0
	ShiftLeftBC
	ShiftLeftBC
	ShiftLeftBC
	ShiftLeftBC ; x 16
	push hl 
	ld hl,0xfe80	; add to buffer addr
	add hl,bc 
	push de 
	call DRAW_TileFromBuffer
	pop de 
	pop hl 
	.skip:
	inc hl 			; next tile byte 
	inc de 
	inc de 			; 2 bytes to the right 
	inc ix 
	pop bc 
	djnz .rowloop
	ld bc,0x280-80	; one row of bytes * 8 bytes high 
	ex de,hl 
	add hl,bc 
	ex de,hl 
	ld a,($02)
	dec a 
	ld ($02),a 
	cp #0
	ld bc,40*256	; window height
	jp nz,.rowloop 
	ret
;;;;



ShiftWindowRight:
; no drawing, only the buffer 
; do during VBL so tiles arent wonky 
	ld a,(MapWidth)
    ld b,WINDOW_WIDTH
    sub a,b 
    ld b,a              ; [B]=128-40
    ld a,(MapOffsetX)
	inc a 
	cp b		; right-most edge?
	ret z				; then return 
	ld (MapOffsetX),a
; else keep going
	; shift tiles 0-39 to the left,
	ld hl,map_buffer+1
	ld de,map_buffer	; 20 rows 
	ld b,WINDOW_HEIGHT		; win height
	.swrl:
	push bc 
	ld bc,#(WINDOW_WIDTH-1)			; win width - 1
	ldir 
	inc hl 
	inc de 
	pop bc 
	djnz .swrl
	; set the flag so we know to draw 
	ld a,1
	ld (ScreenShifted),a 
	; get the new tiles on the right column 
    call GetMapOffset_HL
    xor a 
    ld bc,#(WINDOW_WIDTH-1)
    add hl,bc 
	ld b,20			; ctr: number of tile rows 
	ld ix,#(map_buffer+(WINDOW_WIDTH-1))	; address of buffer + win widt - 1
	.riteside:
	ld a,(hl)		; map1 offset tile 
	ld (ix+0),a 	; to buffer edge 
	ld a,(MapWidth)	
	ld e,a		; map width
	ld d,0
	add hl,de 		; add map width to hl 
	ld de,WINDOW_WIDTH		; add window width to 
	add ix,de 		; map buffer ptr 
	djnz .riteside
	inc sp
	inc sp 
	ret 
;;;;


ShiftWindowLeft:
	ld a,(MapOffsetX)
	dec a 
	cp -1		; right-most edge?
	ret z				; then return 
	ld (MapOffsetX),a
; else keep going
	; set the flag so we know to draw 
	ld a,1
	ld (ScreenShifted),a 
	
	; shift tiles 0-39 to the right 
	ld hl,map_backbuffer
	ld de,map_buffer+1
	ld b,WINDOW_HEIGHT
	.swll: ; shift window left loop 
	push bc 
	ld bc,WINDOW_WIDTH-1	; 39
	ldir 	; one row shift 
	inc hl 
	inc de  ; +1 to skip top right tile 
	pop bc  ; row ctr 
	djnz .swll 
	
	; get the new tiles on the leftmost column 
    call GetMapOffset_HL
    ld b,WINDOW_HEIGHT 
    ld ix,map_buffer    ; target 
    .lside:
    ld a,(hl)
    ld (ix+0),a 
    ld a,(MapWidth)
    ld e,a 
    ld d,0 
    add hl,de           ; hl += mapwidth 
    ld de,WINDOW_WIDTH
    add ix,de 
    djnz .lside 
	inc sp
	inc sp 
	ret 
;;;;

ShiftWindowDown:
; increase Y 
    ld a,(MapHeight)
    ld b,#(WINDOW_HEIGHT)
    sub a,b 
    ld b,a              ; [B]=64-20
    ld a,(MapOffsetY)
    inc a 
    cp b 
  ret z               ; already at bottom - dont scroll just ret 
    ld (MapOffsetY),a 
    ld a,1 
    ld (ScreenShifted),a ; ScreenShifted = True 
    ; shift buffer rows 1-20 to 0-19
    ld hl,map_buffer+WINDOW_WIDTH
    ld de,map_buffer
    ld bc,#(WINDOW_WIDTH*(WINDOW_HEIGHT-1))
    ldir 

    ; fill bottom row 
    ;; offset = map1 + (offsety * mapwidth) + offsetx 
    call GetMapOffset_HL ; + (128*19)
    push hl 
    ; add hl+mapwidth * window height to get bottom row 
    ld a,(MapWidth)
    dec a           ; minimum width 2 ;)
    ld b,a 
    ld c,0
    ld hl,WINDOW_HEIGHT-1
    ld de,WINDOW_HEIGHT-1
    .wwl:
    add hl,de 
    djnz .wwl 
    push hl 
    pop bc      ; 128 * 19
    pop hl 
    add hl,bc   ; + offset 
    ld de,map_buffer+(WINDOW_WIDTH*19)
    ld bc,WINDOW_WIDTH
    ldir 
	inc sp
	inc sp 
  ret 
;;;;

ShiftWindowUp:
    ; decrease Y 
    ld a,(MapOffsetY)
    dec a 
    cp -1
    ret z 
    ld (MapOffsetY),a 
    ; set shift bool 
    ld a,1
    ld (ScreenShifted),a 
    ; move rows 0-19 to 1-20
    ld hl,map_backbuffer
    ld de,map_buffer+WINDOW_WIDTH
    ld bc,WINDOW_WIDTH*(WINDOW_HEIGHT-1) ; 40 * 19
    ldir 
    ; add top row 
    call GetMapOffset_HL
    ld de,map_buffer
    ld bc,WINDOW_WIDTH
    ldir 
	inc sp
	inc sp 
    ret
;;;;

GetMapOffset_HL:
; returns the & of top left corner tile of the window in HL 
; TODO: Improve this when X or Y == 0 
    ld de,0
    ld a,(MapOffsetY)
    cp 1
    jr z,.ofone 
    cp 0 
    jr z,.ofzer
    ld b,a 
    ld a,(MapWidth)
    ld l,a 
    ld h,0
    ld e,a 
    ;ld d,0              ; B = height , HL/DE = width
    .gol:
    add hl,de           ; Y ofs = width * height
    djnz .gol
    ld a,(MapOffsetX)
    ld c,a 
    ld b,0              ; BC = x ofs
    add hl,bc           ; (Y*w)+X
    ld bc,map1          ; 0x6000
    add hl,bc           ; OK
    ret
    .ofone:
    ld a,(MapWidth)
    ld e,a 
    ld d,0              ; DE = mapwdith
    .ofzer:
    ld hl,map1
    add hl,de           ; + map addr
    ;ret 
    ;ld hl,map1 
    ld a,(MapOffsetX)   ; + x offs
    ld c,a 
    ld b,0
    add hl,bc 
    ret 
;;;;